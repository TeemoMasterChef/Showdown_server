{
  "version": 3,
  "sources": ["../../../../data/mods/chatbats/moves.ts"],
  "sourcesContent": ["export const Moves: import('../../../sim/dex-moves').ModdedMoveDataTable = {\r\n\tancientpower: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Physical\",\r\n\t\tsecondary: null,\r\n\t\t// Ancient Power is physical and boosts on-kill\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) {\r\n\t\t\t\tthis.boost({ atk: 1, def: 1, spa: 1, spd: 1, spe: 1 }, pokemon, pokemon, move);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"If this move causes the opponent to faint, raises the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.\",\r\n\t\tshortDesc: \"Raise all stats by 1 if this move KOs the target.\",\r\n\t},\r\n\tsandsearstorm: {\r\n\t\t// Now always hits in Sand in addition to Rain\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['raindance', 'sandstorm'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tmountainmaw: {\r\n\t\t// Copied from Psychic Fangs, just changed to be Rock type\r\n\t\tnum: -101,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 85,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Mountain Maw\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1, bite: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonTryHit(pokemon) {\r\n\t\t\t// will shatter screens through sub, before you hit\r\n\t\t\tpokemon.side.removeSideCondition('reflect');\r\n\t\t\tpokemon.side.removeSideCondition('lightscreen');\r\n\t\t\tpokemon.side.removeSideCondition('auroraveil');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Crunch', target);\r\n\t\t\tthis.add('-anim', source, 'Rock Slide', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tshortDesc: \"Breaks Screens.\",\r\n\t\tdesc: \"Breaks Screens.\",\r\n\t},\r\n\tscavenge: {\r\n\t\tnum: -102,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Scavenge\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Poison\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Thief', target);\r\n\t\t},\r\n\t\tonAfterMove(source) {\r\n\t\t\tif (source.lastItem) {\r\n\t\t\t\tconst item = source.lastItem;\r\n\t\t\t\tsource.lastItem = '';\r\n\t\t\t\tsource.setItem(item);\r\n\t\t\t\tthis.add('-item', source, this.dex.items.get(item), '[from] move: Scavenge');\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"User regains their last used item, similar to Recycle.\",\r\n\t\tdesc: \"If the user has consumed their item, it will be restored.\",\r\n\t},\r\n\taquaring: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.add('-start', pokemon, 'Aqua Ring');\r\n\t\t\t},\r\n\t\t\tonResidualOrder: 6,\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 16);\r\n\t\t\t},\r\n\t\t\tonSourceModifyAtkPriority: 5,\r\n\t\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSourceModifySpAPriority: 5,\r\n\t\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyAtk(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Water') {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifySpA(atk, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Water') {\r\n\t\t\t\t\treturn this.chainModify(2);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"2x Water power, 0.5x Fire damage, heal 1/16 HP per turn.\",\r\n\t\tdesc: \"User recovers 1/16 max HP per turn. While this is active, this Pokemon's Water power is 2x and Fire power against it is halved.\",\r\n\t},\r\n\r\n\tragingbull: {\r\n\t\tnum: 9999,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tpriority: 0,\r\n\t\tpp: 10,\r\n\t\tname: \"Raging Bull\",\r\n\t\ttype: \"Normal\",\r\n\t\teffectType: \"Move\",\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tshortDesc: \"Type swaps to most effective (Water, Fighting, Fire, or Normal).\",\r\n\t\tdesc: \"Changes the move's and user's forme to the most effective against the target (Water, Fighting, Fire, or Normal).\",\r\n\t\tbeforeMoveCallback(source, target, move) {\r\n\t\t\tif (target) {\r\n\t\t\t\tconst typeEffectiveness: { [k: string]: number } = {\r\n\t\t\t\t\tNormal: this.dex.getEffectiveness('Normal', target),\r\n\t\t\t\t\tWater: this.dex.getEffectiveness('Water', target),\r\n\t\t\t\t\tFighting: this.dex.getEffectiveness('Fighting', target),\r\n\t\t\t\t\tFire: this.dex.getEffectiveness('Fire', target),\r\n\t\t\t\t};\r\n\t\t\t\tlet bestType = 'Normal';\r\n\t\t\t\tlet type: keyof typeof typeEffectiveness;\r\n\t\t\t\tlet maxEffectiveness = -Infinity;\r\n\t\t\t\t// gets most effective type against target (defaults to normal)\r\n\t\t\t\tfor (type in typeEffectiveness) {\r\n\t\t\t\t\tif (typeEffectiveness[type] > maxEffectiveness) {\r\n\t\t\t\t\t\tmaxEffectiveness = typeEffectiveness[type];\r\n\t\t\t\t\t\tbestType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// changes form to match most effective type\r\n\t\t\t\tlet forme = '';\r\n\t\t\t\tswitch (bestType) {\r\n\t\t\t\tcase 'Water': forme = '-Paldea-Aqua'; break;\r\n\t\t\t\tcase 'Fighting': forme = '-Paldea-Combat'; break;\r\n\t\t\t\tcase 'Fire': forme = '-Paldea-Blaze'; break;\r\n\t\t\t\t}\r\n\t\t\t\tsource.formeChange('Tauros' + forme);\r\n\t\t\t\tthis.add('-ability', source, 'Adaptability');\r\n\t\t\t\tsource.m.ragingBullMoveType = bestType;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// animation was remnant of Techno Blast code being copied, decided to keep because funny\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.add('-anim', source, 'Techno Blast', target);\r\n\t\t},\r\n\t\t// sets type properly (failsafe)\r\n\t\tonModifyType(move, pokemon, target) {\r\n\t\t\tif (pokemon.m.ragingBullMoveType) {\r\n\t\t\t\tmove.type = pokemon.m.ragingBullMoveType;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t},\r\n\ticiclestorm: {\r\n\t\tnum: -1044,\r\n\t\taccuracy: 95,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Icicle Storm\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Ice Shard', target);\r\n\t\t\tthis.add('-anim', source, 'Ice Shard', target);\r\n\t\t\tthis.add('-anim', source, 'Ice Shard', target);\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tthis.field.setWeather('snowscape');\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ice\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"Sets Snow on-hit.\",\r\n\t\tshortDesc: \"Sets Snow.\",\r\n\t},\r\n\tspringtidestorm: {\r\n\t\t// Now always hits in Sand in addition to Rain\r\n\t\tinherit: true,\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (target && ['sandstorm', 'raindance'].includes(target.effectiveWeather())) {\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t// Poison type now\r\n\tspitup: {\r\n\t\tinherit: true,\r\n\t\ttype: \"Poison\",\r\n\t},\r\n\t// clone of shell side arm (modified to be base Physical so the randbats algorithm gives Attack EVs to Phione\r\n\tgeyser: {\r\n\t\tnum: -104,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Geyser\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, contact: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (!target) return;\r\n\t\t\tconst atk = pokemon.getStat('atk', false, true);\r\n\t\t\tconst spa = pokemon.getStat('spa', false, true);\r\n\t\t\tconst def = target.getStat('def', false, true);\r\n\t\t\tconst spd = target.getStat('spd', false, true);\r\n\t\t\tconst physical = Math.floor(Math.floor(Math.floor(Math.floor(2 * pokemon.level / 5 + 2) * 90 * atk) / def) / 50);\r\n\t\t\tconst special = Math.floor(Math.floor(Math.floor(Math.floor(2 * pokemon.level / 5 + 2) * 90 * spa) / spd) / 50);\r\n\t\t\tif (physical < special || (physical === special && this.randomChance(1, 2))) {\r\n\t\t\t\tmove.category = 'Special';\r\n\t\t\t\tmove.flags.contact = undefined;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Water Spout', target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\t// Shell Side Arm normally reveals its category via animation on cart, but doesn't play either custom animation against allies\r\n\t\t\tif (!source.isAlly(target)) this.hint(move.category + \" Geyser\");\r\n\t\t},\r\n\t\tonAfterSubDamage(damage, target, source, move) {\r\n\t\t\tif (!source.isAlly(target)) this.hint(move.category + \" Geyser\");\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tdesc: \"This move is Special + no contact if it would be stronger.\",\r\n\t\tshortDesc: \"This move is Special + no contact if it would be stronger.\",\r\n\t},\r\n\t// Encore + Rain Dance\r\n\ttidalsurge: {\r\n\t\tnum: -105,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Tidal Surge\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.add('-anim', source, 'Surf', target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tthis.add('-anim', source, 'Encore', target);\r\n\t\t\ttarget.addVolatile('encore');\r\n\t\t},\r\n\t\tweather: 'raindance',\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Water\",\r\n\t\tzMove: { boost: { atk: 1 } },\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tdesc: \"Encore + Rain Dance\",\r\n\t\tshortDesc: \"Encore + Rain Dance\",\r\n\t},\r\n\t// prio + double power if opponent is using a water move\r\n\tbonsaibounce: {\r\n\t\tnum: -106,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Bonsai Bounce\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, contact: 1, mirror: 1, metronome: 1 },\r\n\t\t// checks for water move usage from opponent\r\n\t\tonModifyPriority(priority, source) {\r\n\t\t\t// gets current foe in singles\r\n\t\t\tconst foe = source.foes()[0];\r\n\t\t\tif (!foe || foe.fainted) {\r\n\t\t\t\treturn priority;\r\n\t\t\t}\r\n\t\t\t// gets attack of foe this turn\r\n\t\t\tconst action = this.queue.willMove(foe);\r\n\t\t\tif (!action || action.choice !== 'move') {\r\n\t\t\t\treturn priority;\r\n\t\t\t}\r\n\t\t\tconst move = action.move;\r\n\t\t\tif (move?.type === 'Water') {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t} else {\r\n\t\t\t\treturn priority;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// modifies base power\r\n\t\tonBasePower(basePower, source, target) {\r\n\t\t\tconst foe = source.foes()[0];\r\n\t\t\tif (!foe || foe.fainted) {\r\n\t\t\t\treturn basePower;\r\n\t\t\t}\r\n\t\t\tconst action = this.queue.willMove(foe);\r\n\t\t\tif (!action || action.choice !== 'move') {\r\n\t\t\t\treturn basePower;\r\n\t\t\t}\r\n\t\t\tconst move = action.move;\r\n\t\t\tif (move?.type === 'Water') {\r\n\t\t\t\tthis.add('-message', `Sudowoodo draws power from the water!`);\r\n\t\t\t\treturn basePower + 70;\r\n\t\t\t} else {\r\n\t\t\t\treturn basePower;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.add('-anim', source, 'Ivy Cudgel Rock', target);\r\n\t\t\tthis.add('-anim', source, 'Splash');\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"+1 Priority and 2x power if target uses Water move.\",\r\n\t\tdesc: \"If the target is using a Water type move, this move will always move first and gains double power.\",\r\n\t},\r\n\tironstrike: {\r\n\t\t// implemented via changes to Stealth Rocks and Spikes\r\n\t\tnum: -107,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 50,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Iron Strike\",\r\n\t\tpp: 15,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, contact: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source, move) {\r\n\t\t\tthis.add('-anim', source, 'Metal Claw', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Inflicts damage from hazards on target's side.\",\r\n\t\tdesc: \"Target takes damage from all entry hazards on their side of the field, unless they are immune.\",\r\n\t},\r\n\tthunderkick: {\r\n\t\tnum: -1192,\r\n\t\tname: \"Thunder Kick\",\r\n\t\ttype: \"Electric\",\r\n\t\tbasePower: 50,\r\n\t\taccuracy: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tpriority: 0,\r\n\t\tpp: 5,\r\n\t\ttarget: \"normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(t, s, m) {\r\n\t\t\tthis.add('-anim', s, 'High Jump Kick', t);\r\n\t\t\tthis.add('-anim', s, 'Thunder', t);\r\n\t\t},\r\n\t\tflags: { contact: 1, protect: 1 },\r\n\t},\r\n\tthunderouskick: {\r\n\t\tinherit: true,\r\n\t\tsecondary: null,\r\n\t\tonHit(target, source, move) {\r\n\t\t\t// random # 0 or 1\r\n\t\t\tconst randomNum = this.random(2);\r\n\t\t\t// 50% chance to drop def\r\n\t\t\tif (randomNum === 0) {\r\n\t\t\t\tif (target.boosts.def !== -6) {\r\n\t\t\t\t\tthis.boost({ def: -1 }, target, source, move);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-message', `${source.name} follows up with a Thunder Kick!`);\r\n\t\t\t\t// uses Thunder Kick\r\n\t\t\t\tthis.actions.useMove('thunderkick', source, { target });\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"50% chance to reduce Defense by 1, 50% chance to inflict an additional 50 BP Electric type damage.\",\r\n\t\tshortDesc: \"50% -1 Defense, 50% extra 50 BP Electric damage.\",\r\n\t},\r\n\tstealthrock: {\r\n\t\tnum: 446,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Stealth Rock\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { reflectable: 1, metronome: 1, mustpressure: 1 },\r\n\t\tsideCondition: 'stealthrock',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Stealth Rock');\r\n\t\t\t},\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\t// hardcode to prevent hazard damage during Order Up switches + enforce hazard damage while King of the Hill is active\r\n\t\t\t\tif ((pokemon.hasItem('heavydutyboots') && !pokemon.side.getSideCondition('kingofthehill')) ||\r\n\t\t\t\t\tpokemon.side.getSideCondition('orderup')) return;\r\n\t\t\t\tconst typeMod = this.clampIntRange(pokemon.runEffectiveness(this.dex.getActiveMove('stealthrock')), -6, 6);\r\n\t\t\t\tthis.damage(pokemon.maxhp * (2 ** typeMod) / 8);\r\n\t\t\t},\r\n\t\t\t// iron strike functionality (reapplies stealth rock damage when hit with Iron Strike)\r\n\t\t\tonHit(pokemon, source, move) {\r\n\t\t\t\tif (move.id === 'ironstrike') {\r\n\t\t\t\t\tif (pokemon.hasItem('heavydutyboots')) return;\r\n\t\t\t\t\tconst typeMod = this.clampIntRange(pokemon.runEffectiveness(this.dex.getActiveMove('stealthrock')), -6, 6);\r\n\t\t\t\t\tthis.damage(pokemon.maxhp * (2 ** typeMod) / 8);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Rock\",\r\n\t\tzMove: { boost: { def: 1 } },\r\n\t\tcontestType: \"Cool\",\r\n\t},\r\n\tspikes: {\r\n\t\tnum: 191,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Spikes\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { reflectable: 1, nonsky: 1, metronome: 1, mustpressure: 1 },\r\n\t\tsideCondition: 'spikes',\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'Spikes');\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tif (this.effectState.layers >= 3) return false;\r\n\t\t\t\tthis.add('-sidestart', side, 'Spikes');\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t},\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\t// Order Up + king of the hill functionality\r\n\t\t\t\tif (((!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots')) && !pokemon.side.getSideCondition('kingofthehill')) ||\r\n\t\t\t\t\tpokemon.side.getSideCondition('orderup')) return;\r\n\t\t\t\tconst damageAmounts = [0, 3, 4, 6]; // 1/8, 1/6, 1/4\r\n\t\t\t\tthis.damage(damageAmounts[this.effectState.layers] * pokemon.maxhp / 24);\r\n\t\t\t},\r\n\t\t\t// iron strike functionality\r\n\t\t\tonHit(pokemon, source, move) {\r\n\t\t\t\tif (move.id === 'ironstrike') {\r\n\t\t\t\t\tif (!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots')) return;\r\n\t\t\t\t\tconst damageAmounts = [0, 3, 4, 6]; // 1/8, 1/6, 1/4\r\n\t\t\t\t\tthis.damage(damageAmounts[this.effectState.layers] * pokemon.maxhp / 24);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"foeSide\",\r\n\t\ttype: \"Ground\",\r\n\t\tzMove: { boost: { def: 1 } },\r\n\t\tcontestType: \"Clever\",\r\n\t},\r\n\torderup: {\r\n\t\tnum: 856,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Order Up\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1 },\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonSwitchInPriority: -1,\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\t// when Dondozo switches back in after eating, it gains boost\r\n\t\t\t\tif (pokemon.baseSpecies.baseSpecies === 'Dondozo') {\r\n\t\t\t\t\t// reapplies volatiles and stat boosts\r\n\t\t\t\t\tif ((pokemon as any).storedVolatiles) {\r\n\t\t\t\t\t\tfor (const volatile in (pokemon as any).storedVolatiles) {\r\n\t\t\t\t\t\t\tpokemon.addVolatile(volatile);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((pokemon as any).storedBoosts) {\r\n\t\t\t\t\t\tfor (const stat in (pokemon as any).storedBoosts) {\r\n\t\t\t\t\t\t\tconst change = (pokemon as any).storedBoosts[stat as BoostID];\r\n\t\t\t\t\t\t\tif (change !== 0) {\r\n\t\t\t\t\t\t\t\tthis.boost({ [stat]: change }, pokemon);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.add('-message', `Dondozo enjoyed its meal!`);\r\n\t\t\t\t\t// applies boost based on eaten mon stats\r\n\t\t\t\t\tif (this.effectState.eatenBoost === 'atk' || this.effectState.eatenBoost === 'spa') {\r\n\t\t\t\t\t\tthis.boost({ atk: 3 }, pokemon);\r\n\t\t\t\t\t} else if (this.effectState.eatenBoost === 'def' || this.effectState.eatenBoost === 'spd') {\r\n\t\t\t\t\t\tthis.boost({ def: 2, spd: 2 }, pokemon);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.boost({ spe: 3 }, pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// adds volatile ordered, which prevents the order up effect from occuring again until Dondozo switches out\r\n\t\t\t\t\tpokemon.addVolatile('ordered');\r\n\t\t\t\t\t// removes the side condition\r\n\t\t\t\t\tpokemon.side.removeSideCondition('orderup');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// after Dondozo switches out, this happens to the next pokemon that is switched in\r\n\t\t\t\t\tconst meal = pokemon;\r\n\t\t\t\t\t// faints the eaten mon\r\n\t\t\t\t\tpokemon.faint();\r\n\t\t\t\t\t// finds highest stat of eaten mon, stored in effectState eatenBoost\r\n\t\t\t\t\tconst stats = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\t\t\t\t\tlet highestStat = stats[0];\r\n\t\t\t\t\tlet maxStatValue = meal.storedStats[highestStat as StatIDExceptHP];\r\n\r\n\t\t\t\t\tfor (const stat of stats) {\r\n\t\t\t\t\t\tif (meal.storedStats[stat as StatIDExceptHP] > maxStatValue) {\r\n\t\t\t\t\t\t\thighestStat = stat;\r\n\t\t\t\t\t\t\tmaxStatValue = meal.storedStats[stat as StatIDExceptHP];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.effectState.eatenBoost = highestStat;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFaint(pokemon) {\r\n\t\t\t\tconst side = pokemon.side;\r\n\t\t\t\tconst dondozo = side.pokemon.find(p => p.species.name === 'Dondozo' && !p.fainted);\r\n\t\t\t\tif (!dondozo) return;\r\n\t\t\t\t// forces Dondozo in after the eaten mon faints\r\n\t\t\t\tthis.queue.insertChoice({\r\n\t\t\t\t\tchoice: 'switch',\r\n\t\t\t\t\tpokemon,\r\n\t\t\t\t\ttarget: dondozo,\r\n\t\t\t\t});\r\n\t\t\t\tthis.checkFainted();\r\n\t\t\t},\r\n\t\t},\r\n\t\t// when order up hits, first checks for volatile ordered to ensure that Order Up has not already been used, then starts orderup side condition and switches Dondozo out\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (source.volatiles['ordered']) return;\r\n\t\t\tif (source.species.id === 'mew') return;\r\n\t\t\tsource.side.addSideCondition('orderup');\r\n\t\t\t// stores stat changes and volatiles to reapply after switch\r\n\t\t\t(source as any).storedBoosts = { ...source.boosts };\r\n\t\t\t(source as any).storedVolatiles = {};\r\n\t\t\tfor (const volatile in source.volatiles) {\r\n\t\t\t\t(source as any).storedVolatiles[volatile] = source.volatiles[volatile];\r\n\t\t\t}\r\n\t\t\tif (source.side.getSideCondition('orderup')) {\r\n\t\t\t\tthis.add('-ability', source, 'Order Up');\r\n\t\t\t\tthis.add('-message', `Select the Pokemon you would like to eat. Its highest base stat affects the boost you gain from this move.`);\r\n\t\t\t}\r\n\t\t\tsource.switchFlag = true;\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\thasSheerForce: true,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dragon\",\r\n\t\tdesc: \"Dondozo eats a mon on the user's team, KOing it. Dondozo then gains a stat boost depending on the eaten mon's highest stat: +3 Attack for Atk/SpA, +2 Def/+2 SpD for Def/SpD, and +3 Speed for Speed.\",\r\n\t\tshortDesc: \"Dondozo KOs an ally mon. Gain stat boost in ally's highest stat.\",\r\n\t},\r\n\ttoxicspikes: {\r\n\t\t// prevents Dondozo from being affected by Toxic Spikes during Order Up switching\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spikes');\r\n\t\t\t\tthis.effectState.layers = 1;\r\n\t\t\t},\r\n\t\t\tonSideRestart(side) {\r\n\t\t\t\tif (this.effectState.layers >= 2) return false;\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Toxic Spikes');\r\n\t\t\t\tthis.effectState.layers++;\r\n\t\t\t},\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\t// hardcode for King of the Hill\r\n\t\t\t\tif (!pokemon.isGrounded() && !pokemon.side.getSideCondition('kingofthehill')) return;\r\n\t\t\t\tif (pokemon.hasType('Poison')) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Toxic Spikes', `[of] ${pokemon}`);\r\n\t\t\t\t\tpokemon.side.removeSideCondition('toxicspikes');\r\n\t\t\t\t\t// hardcode for King of the Hill and Order Up\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tpokemon.hasType('Steel') ||\r\n\t\t\t\t\t(pokemon.hasItem('heavydutyboots') && !pokemon.side.getSideCondition('kingofthehill')) ||\r\n\t\t\t\t\tpokemon.side.getSideCondition('orderup')\r\n\t\t\t\t) {\r\n\t\t\t\t\t// do nothing\r\n\t\t\t\t} else if (this.effectState.layers >= 2) {\r\n\t\t\t\t\tpokemon.trySetStatus('tox', pokemon.side.foe.active[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpokemon.trySetStatus('psn', pokemon.side.foe.active[0]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tstickyweb: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'move: Sticky Web');\r\n\t\t\t},\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\t// king of the hill\r\n\t\t\t\tif ((!pokemon.isGrounded() || pokemon.hasItem('heavydutyboots')) &&\r\n\t\t\t\t\t!pokemon.side.getSideCondition('kingofthehill')) return;\r\n\t\t\t\tthis.add('-activate', pokemon, 'move: Sticky Web');\r\n\t\t\t\tthis.boost({ spe: -1 }, pokemon, pokemon.side.foe.active[0], this.dex.getActiveMove('stickyweb'));\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tshatteredseal: {\r\n\t\tnum: -1002,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Shattered Seal\",\r\n\t\tpp: 15,\r\n\t\tpseudoWeather: 'gravity',\r\n\t\tpriority: 0,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Spite', target);\r\n\t\t\tthis.add('-anim', source, 'Spirit Shackle', target);\r\n\t\t},\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Ghost\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"Sets gravity.\",\r\n\t\tshortDesc: \"Sets gravity.\",\r\n\t},\r\n\talloutassault: {\r\n\t\tnum: -1003,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 120,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"All-Out Assault\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'All-Out Pummeling', target);\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\r\n\t\t\tif (!target || target.fainted || target.hp <= 0) {\r\n\t\t\t\tthis.boost({ atk: 1 }, pokemon, pokemon, move);\r\n\t\t\t} else {\r\n\t\t\t\tthis.boost({ atk: -1 }, pokemon, pokemon, move);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fighting\",\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"If this move KOs the target, raise the user's attack by 1. Otherwise, lower attack by 1.\",\r\n\t\tshortDesc: \"On KO: +1 Atk. Otherwise -1 Atk.\",\r\n\t},\r\n\twickedblow: {\r\n\t\tinherit: true,\r\n\t\tbeforeMoveCallback(source, target, move) {\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.effectState.surgingStrikesAlreadyUsed = 0;\r\n\t\t\t\tthis.add('-anim', source, 'Techno Blast', target);\r\n\t\t\t\tconst typeEffectiveness: { [k: string]: number } = {\r\n\t\t\t\t\tWater: this.dex.getEffectiveness('Water', target),\r\n\t\t\t\t\tDark: this.dex.getEffectiveness('Dark', target),\r\n\t\t\t\t};\r\n\t\t\t\tlet type: keyof typeof typeEffectiveness;\r\n\t\t\t\tlet bestType = 'Water';\r\n\t\t\t\tlet maxEffectiveness = -Infinity;\r\n\t\t\t\t// gets most effective type against target (defaults to the current type)\r\n\t\t\t\tfor (type in typeEffectiveness) {\r\n\t\t\t\t\tif (typeEffectiveness[type] > maxEffectiveness) {\r\n\t\t\t\t\t\tmaxEffectiveness = typeEffectiveness[type];\r\n\t\t\t\t\t\tbestType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// changes form to match most effective type\r\n\t\t\t\tif (bestType === 'Dark') {\r\n\t\t\t\t\tthis.add('-message', `Urshifu takes pity on its foe and transforms into a weaker type!`);\r\n\t\t\t\t\tsource.formeChange('Urshifu-Rapid-Strike', null, true);\r\n\t\t\t\t\tsource.setAbility('Sniper');\r\n\t\t\t\t\tthis.add('-ability', source, 'Sniper');\r\n\t\t\t\t\tconst oldMove = 'wickedblow';\r\n\t\t\t\t\tconst newMove = 'surgingstrikes';\r\n\t\t\t\t\tconst oldMoveId = this.toID(oldMove);\r\n\t\t\t\t\tconst newMoveData = this.dex.moves.get(newMove);\r\n\t\t\t\t\tconst oldMoveIdx = source.moveSlots.findIndex(x => x.id === oldMoveId);\r\n\t\t\t\t\tif (oldMoveIdx >= 0) {\r\n\t\t\t\t\t\tsource.moveSlots[oldMoveIdx] = source.baseMoveSlots[oldMoveIdx] = {\r\n\t\t\t\t\t\t\tmove: newMoveData.name,\r\n\t\t\t\t\t\t\tid: newMoveData.id,\r\n\t\t\t\t\t\t\tpp: newMoveData.pp,\r\n\t\t\t\t\t\t\tmaxpp: newMoveData.pp,\r\n\t\t\t\t\t\t\ttarget: newMoveData.target,\r\n\t\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.useMove('surgingstrikes', source, { target });\r\n\t\t\t\t\tthis.effectState.surgingStrikesAlreadyUsed = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTry(source, target, move) {\r\n\t\t\tif (this.effectState.surgingStrikesAlreadyUsed === 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"This move will transform into Rapid Strike Urshifu/Surging Strikes if it would be less effective against the target.\",\r\n\t\tshortDesc: \"Becomes Surging Strikes if it would be less effective.\",\r\n\t},\r\n\tsurgingstrikes: {\r\n\t\tinherit: true,\r\n\t\tbeforeMoveCallback(source, target, move) {\r\n\t\t\tif (source.species.id === 'araquanid') return;\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.effectState.wickedBlowAlreadyUsed = 0;\r\n\t\t\t\tthis.add('-anim', source, 'Techno Blast', target);\r\n\t\t\t\tconst typeEffectiveness: { [k: string]: number } = {\r\n\t\t\t\t\tDark: this.dex.getEffectiveness('Dark', target),\r\n\t\t\t\t\tWater: this.dex.getEffectiveness('Water', target),\r\n\t\t\t\t};\r\n\t\t\t\tlet type: keyof typeof typeEffectiveness;\r\n\t\t\t\tlet bestType = 'Dark';\r\n\t\t\t\tlet maxEffectiveness = -Infinity;\r\n\t\t\t\t// gets most effective type against target (defaults to the current type)\r\n\t\t\t\tfor (type in typeEffectiveness) {\r\n\t\t\t\t\tif (typeEffectiveness[type] > maxEffectiveness) {\r\n\t\t\t\t\t\tmaxEffectiveness = typeEffectiveness[type];\r\n\t\t\t\t\t\tbestType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// changes form to match most effective type\r\n\t\t\t\tif (bestType === 'Water') {\r\n\t\t\t\t\tthis.add('-message', `Urshifu takes pity on its foe and transforms into a weaker type!`);\r\n\t\t\t\t\tsource.formeChange('Urshifu', null, true);\r\n\t\t\t\t\tsource.setAbility('Sniper');\r\n\t\t\t\t\tthis.add('-ability', source, 'Sniper');\r\n\t\t\t\t\tconst newMove = 'wickedblow';\r\n\t\t\t\t\tconst oldMoveId: ID = 'surgingstrikes' as ID;\r\n\t\t\t\t\tconst newMoveData = this.dex.moves.get(newMove);\r\n\t\t\t\t\tconst oldMoveIdx = source.moveSlots.findIndex(x => x.id === oldMoveId);\r\n\t\t\t\t\tif (oldMoveIdx >= 0) {\r\n\t\t\t\t\t\tsource.moveSlots[oldMoveIdx] = source.baseMoveSlots[oldMoveIdx] = {\r\n\t\t\t\t\t\t\tmove: newMoveData.name,\r\n\t\t\t\t\t\t\tid: newMoveData.id,\r\n\t\t\t\t\t\t\tpp: newMoveData.pp,\r\n\t\t\t\t\t\t\tmaxpp: newMoveData.pp,\r\n\t\t\t\t\t\t\ttarget: newMoveData.target,\r\n\t\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.useMove('wickedblow', source, { target });\r\n\t\t\t\t\tthis.effectState.wickedBlowAlreadyUsed = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTry(source, target, move) {\r\n\t\t\tif (this.effectState.wickedBlowAlreadyUsed === 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"This move will transform into Single Strike Urshifu/Wicked Blow if it would be less effective against the target. Does not work with Araquanid.\",\r\n\t\tshortDesc: \"Becomes Wicked Blow if it would be less effective.\",\r\n\t},\r\n\ttwister: {\r\n\t\tnum: 239,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Twister\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tonHit(target, source, move) {\r\n\t\t\tlet success = !!this.boost({ evasion: -1 });\r\n\t\t\tconst removeAll = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\tconst removeTarget = ['reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', ...removeAll];\r\n\t\t\tfor (const targetCondition of removeTarget) {\r\n\t\t\t\tif (target.side.removeSideCondition(targetCondition)) {\r\n\t\t\t\t\tif (!removeAll.includes(targetCondition)) continue;\r\n\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(targetCondition).name, '[from] move: Defog', `[of] ${source}`);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of removeAll) {\r\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] move: Defog', `[of] ${source}`);\r\n\t\t\t\t\tsuccess = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\treturn success;\r\n\t\t},\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1, wind: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"allAdjacentFoes\",\r\n\t\ttype: \"Dragon\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"Removes hazards, side conditions, and terrain. Lowers Evasion by 1.\",\r\n\t\tshortDesc: \"-1 evasion; ends user and target hazards/terrain.\",\r\n\t},\r\n\tmagnetbomb: {\r\n\t\tnum: 443,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 90,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Magnet Bomb\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tonHit(target, source, move) {\r\n\t\t\ttarget.setType('Steel');\r\n\t\t\tthis.add('-start', target, 'typechange', 'Steel');\r\n\t\t},\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Steel\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tdesc: \"Changes the target's type to Steel.\",\r\n\t\tshortDesc: \"Changes the target's type to Steel.\",\r\n\t},\r\n\ttriplekick: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 20,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\treturn 20 * move.hit;\r\n\t\t},\r\n\t},\r\n\tfreezingglare: {\r\n\t\tinherit: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 30,\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (!target.hasType('Ice')) {\r\n\t\t\t\t\ttarget.trySetStatus('frostbite', source, move);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"30% chance to inflict Frostbite.\",\r\n\t\tshortDesc: \"30% chance to inflict Frostbite.\",\r\n\t},\r\n\tzippyzap: {\r\n\t\tinherit: true,\r\n\t\tcategory: \"Special\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Extreme Speed', target);\r\n\t\t\tthis.add('-anim', source, 'Thunder', target);\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\tdesc: \"Nearly always goes first.\",\r\n\t\tshortDesc: \"Nearly always goes first.\",\r\n\t},\r\n\tburnout: {\r\n\t\tnum: -1004,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Burn Out\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Fire Spin', target);\r\n\t\t},\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (source.species.id === 'jolteon' || source.species.id === 'vaporeon') {\r\n\t\t\t\tthis.add('-message', `Eevee uses its Fire Stone!`);\r\n\t\t\t\tconst currentHP = source.hp / source.maxhp;\r\n\t\t\t\tsource.formeChange('Flareon', null, true);\r\n\t\t\t\tsource.sethp(source.maxhp * currentHP);\r\n\t\t\t\tthis.add('-sethp', source, source.getHealth, '[from] move: Flip Turn', '[silent]');\r\n\t\t\t\t// target.setAbility('Eeveelution');\r\n\t\t\t\t// target.baseAbility = target.ability;\r\n\t\t\t\tconst newMoves = ['flipturn', 'voltswitch', 'sizzlyslide', 'facade'];\r\n\t\t\t\t// Update move slots\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\r\n\t\t\t\tsource.moveSlots = newMoves.map(move => {\r\n\t\t\t\t\tconst moveData = this.dex.moves.get(move);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tmove: moveData.name,\r\n\t\t\t\t\t\tid: moveData.id,\r\n\t\t\t\t\t\tpp: moveData.pp,\r\n\t\t\t\t\t\tmaxpp: moveData.pp,\r\n\t\t\t\t\t\ttarget: moveData.target,\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\t// this forces the UI to update move slots visually\r\n\t\t\t\t(source as any).baseMoveSlots = source.moveSlots.slice();\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tcontestType: \"Cute\",\r\n\t\tdesc: \"User switches out after damaging the target.\",\r\n\t\tshortDesc: \"User switches out after damaging the target.\",\r\n\t},\r\n\tvoltswitch: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (source.species.id === 'flareon' || source.species.id === 'vaporeon') {\r\n\t\t\t\tthis.add('-message', `Eevee uses its Thunder Stone!`);\r\n\t\t\t\tconst currentHP = source.hp / source.maxhp;\r\n\t\t\t\tsource.formeChange('Jolteon', null, true);\r\n\t\t\t\tsource.sethp(source.maxhp * currentHP);\r\n\t\t\t\tthis.add('-sethp', source, source.getHealth, '[from] move: Flip Turn', '[silent]');\r\n\t\t\t\t// target.setAbility('Eeveelution');\r\n\t\t\t\t// target.baseAbility = target.ability;\r\n\t\t\t\tconst newMoves = ['flipturn', 'burnout', 'zippyzap', 'freezyfrost'];\r\n\t\t\t\t// Update move slots\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\r\n\t\t\t\tsource.moveSlots = newMoves.map(move => {\r\n\t\t\t\t\tconst moveData = this.dex.moves.get(move);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tmove: moveData.name,\r\n\t\t\t\t\t\tid: moveData.id,\r\n\t\t\t\t\t\tpp: moveData.pp,\r\n\t\t\t\t\t\tmaxpp: moveData.pp,\r\n\t\t\t\t\t\ttarget: moveData.target,\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\t// this forces the UI to update move slots visually\r\n\t\t\t\t(source as any).baseMoveSlots = source.moveSlots.slice();\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tflipturn: {\r\n\t\tinherit: true,\r\n\t\tonHit(target, source, move) {\r\n\t\t\tif (source.species.id === 'jolteon' || source.species.id === 'flareon') {\r\n\t\t\t\tthis.add('-message', `Eevee uses its Water Stone!`);\r\n\t\t\t\tconst currentHP = source.hp / source.maxhp;\r\n\t\t\t\tsource.formeChange('Vaporeon', null, true);\r\n\t\t\t\tsource.sethp(source.maxhp * currentHP);\r\n\t\t\t\tthis.add('-sethp', source, source.getHealth, '[from] move: Flip Turn', '[silent]');\r\n\t\t\t\t// target.setAbility('Eeveelution');\r\n\t\t\t\t// target.baseAbility = target.ability;\r\n\t\t\t\tconst newMoves = ['voltswitch', 'burnout', 'recover', 'scald'];\r\n\t\t\t\t// Update move slots\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\r\n\t\t\t\tsource.moveSlots = newMoves.map(move => {\r\n\t\t\t\t\tconst moveData = this.dex.moves.get(move);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tmove: moveData.name,\r\n\t\t\t\t\t\tid: moveData.id,\r\n\t\t\t\t\t\tpp: moveData.pp,\r\n\t\t\t\t\t\tmaxpp: moveData.pp,\r\n\t\t\t\t\t\ttarget: moveData.target,\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\tused: false,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\t// this forces the UI to update move slots visually\r\n\t\t\t\t(source as any).baseMoveSlots = source.moveSlots.slice();\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsizzlyslide: {\r\n\t\tinherit: true,\r\n\t\tbasePower: 80,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Flame Charge', target);\r\n\t\t},\r\n\t},\r\n\tfreezyfrost: {\r\n\t\tinherit: true,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Blizzard', target);\r\n\t\t},\r\n\t},\r\n\tbouncybubble: {\r\n\t\tinherit: true,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Bubble Beam', target);\r\n\t\t},\r\n\t},\r\n\tpurify: {\r\n\t\tinherit: true,\r\n\t\tpp: 10,\r\n\t\tflags: { reflectable: 1, heal: 1, metronome: 1 },\r\n\t\tonHit(target, source) {\r\n\t\t\tconst foe = source.side.foe.active[0];\r\n\t\t\tif (foe && !foe.fainted && foe.status) {\r\n\t\t\t\tthis.heal(Math.ceil(source.maxhp * 0.5), source);\r\n\t\t\t} else {\r\n\t\t\t\tthis.heal(Math.ceil(source.maxhp * 0.25), source);\r\n\t\t\t}\r\n\t\t},\r\n\t\ttarget: \"self\",\r\n\t\tdesc: \"Heals for 25% HP, or 50% if foe is statused.\",\r\n\t\tshortDesc: \"Heals for 25% HP, or 50% if foe is statused.\",\r\n\t},\r\n\tsaltcurse: {\r\n\t\tnum: -1006,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (target.status === 'par') {\r\n\t\t\t\tthis.debug('BP doubled on paralyzed target');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type) {\r\n\t\t\tif (type === 'Water') return 1;\r\n\t\t\tif (type === 'Steel') return 1;\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Glare', target);\r\n\t\t\tthis.add('-anim', source, 'Ivy Cudgel Rock', target);\r\n\t\t},\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Salt Curse\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Rock\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tdesc: \"Double power if target is Paralyzed. Super-effective against Water and Steel.\",\r\n\t\tshortDesc: \"2x BP if target is Paralyzed, Water type, or Steel type.\",\r\n\t},\r\n\tflyby: {\r\n\t\tnum: -1006,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 70,\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Fly-by\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Dual Wingbeat', target);\r\n\t\t},\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tselfSwitch: true,\r\n\t\tsecondary: {\r\n\t\t\tchance: 50,\r\n\t\t\tboosts: {\r\n\t\t\t\tatk: -1,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Flying\",\r\n\t\tcontestType: \"Cute\",\r\n\t\tdesc: \"User switches out. Target: -1 Attack.\",\r\n\t\tshortDesc: \"User switches out. Target: -1 Attack.\",\r\n\t},\r\n\tsilktrap: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-singleturn', target, 'Protect');\r\n\t\t\t},\r\n\t\t\tonTryHitPriority: 3,\r\n\t\t\tonTryHit(target, source, move) {\r\n\t\t\t\tif (!move.flags['protect'] || move.category === 'Status') {\r\n\t\t\t\t\tif (move.isZ || move.isMax) target.getMoveHitData(move).zBrokeProtect = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.smartTarget) {\r\n\t\t\t\t\tmove.smartTarget = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Protect');\r\n\t\t\t\t}\r\n\t\t\t\tconst lockedmove = source.getVolatile('lockedmove');\r\n\t\t\t\tif (lockedmove) {\r\n\t\t\t\t\t// Outrage counter is reset\r\n\t\t\t\t\tif (source.volatiles['lockedmove'].duration === 2) {\r\n\t\t\t\t\t\tdelete source.volatiles['lockedmove'];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tsource.side.addSideCondition('stickyweb');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t},\r\n\t\t\tonHit(target, source, move) {\r\n\t\t\t\tif (move.isZOrMaxPowered && this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\t\tsource.side.addSideCondition('stickyweb');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tdesc: \"Protect. If contact: set Sticky Web.\",\r\n\t\tshortDesc: \"Protect. If contact: set Sticky Web.\",\r\n\t},\r\n\theatsink: {\r\n\t\tnum: -1007,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Fire Spin', target);\r\n\t\t\tthis.add('-anim', source, 'Bitter Blade', target);\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (target?.status === 'brn') {\r\n\t\t\t\tmove.drain = [3, 4];\r\n\t\t\t}\r\n\t\t},\r\n\t\tcategory: \"Special\",\r\n\t\tname: \"Heat Sink\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tdrain: [1, 2],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fire\",\r\n\t\tzMove: { basePower: 160 },\r\n\t\tcontestType: \"Clever\",\r\n\t\tdesc: \"50% drain. 75% drain instead if target is Burned.\",\r\n\t\tshortDesc: \"50% drain. 75% drain if target is Burned.\",\r\n\t},\r\n\tterastarstorm: {\r\n\t\tinherit: true,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst types = pokemon.getTypes();\r\n\t\t\tlet type = types[0];\r\n\t\t\tif (type === 'Bird') type = '???';\r\n\t\t\tif (type === '???' && types[1]) type = types[1];\r\n\t\t\tmove.type = type;\r\n\t\t\tif (pokemon.species.name === 'Terapagos-Stellar') {\r\n\t\t\t\tmove.type = 'Stellar';\r\n\t\t\t\tif (pokemon.getStat('atk', false, true) > pokemon.getStat('spa', false, true)) {\r\n\t\t\t\t\tmove.category = 'Physical';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdesc: \"Type varies based on the user's primary type.\",\r\n\t\tshortDesc: \"Type varies based on the user's primary type.\",\r\n\t},\r\n\tgrabapple: {\r\n\t\tnum: -1008,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 100,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Grab Apple\",\r\n\t\tpp: 10,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Grass\",\r\n\t\tcontestType: \"Tough\",\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Grav Apple', target);\r\n\t\t\tthis.add('-anim', source, 'Thief', target);\r\n\t\t},\r\n\t\tonAfterMove(source) {\r\n\t\t\tif (source.lastItem) {\r\n\t\t\t\tconst item = source.lastItem;\r\n\t\t\t\tsource.lastItem = '';\r\n\t\t\t\tsource.setItem(item);\r\n\t\t\t\tthis.add('-item', source, this.dex.items.get(item), '[from] move: Grab Apple');\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshortDesc: \"User regains their last used item, similar to Recycle.\",\r\n\t\tdesc: \"If the user has consumed their item, it will be restored.\",\r\n\t},\r\n\tsashimishuffle: {\r\n\t\tnum: -1009,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Sashimi Shuffle\",\r\n\t\tpp: 5,\r\n\t\tpriority: 0,\r\n\t\tflags: { metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Order Up', target);\r\n\t\t\tthis.add('-anim', source, 'Order Up', target);\r\n\t\t},\r\n\t\tonHit(target) {\r\n\t\t\tif (!this.canSwitch(target.side) || target.volatiles['commanded']) {\r\n\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\tthis.add('-fail', target);\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t},\r\n\t\tself: {\r\n\t\t\tonHit(source) {\r\n\t\t\t\tsource.skipBeforeSwitchOutEventFlag = true;\r\n\t\t\t},\r\n\t\t},\r\n\t\tselfSwitch: true,\r\n\t\tslotCondition: 'sashimishuffle',\r\n\t\tcondition: {\r\n\t\t\tonSwitchIn(target) {\r\n\t\t\t\tthis.singleEvent('Swap', this.effect, this.effectState, target);\r\n\t\t\t},\r\n\t\t\tonSwap(target) {\r\n\t\t\t\tif (!target.fainted) {\r\n\t\t\t\t\ttarget.heal(target.maxhp / 3);\r\n\t\t\t\t\tthis.add('-heal', target, target.getHealth, '[from] move: Sashimi Shuffle');\r\n\t\t\t\t\ttarget.side.removeSlotCondition(target, 'sashimishuffle');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"self\",\r\n\t\ttype: \"Normal\",\r\n\t\tzMove: { effect: 'clearnegativeboost' },\r\n\t\tcontestType: \"Cute\",\r\n\t\tshortDesc: \"User switches. Next Pokemon heals 1/3 HP.\",\r\n\t\tdesc: \"User switches. Next Pokemon heals 1/3 HP.\",\r\n\t},\r\n\ttechnoblast: {\r\n\t\tinherit: true,\r\n\t\tbasePowerCallback(pokemon, target, move) {\r\n\t\t\tif (this.field.isWeather('snowscape')) {\r\n\t\t\t\treturn move.basePower * 1.3;\r\n\t\t\t} else return move.basePower;\r\n\t\t},\r\n\t},\r\n\tcrowverload: {\r\n\t\tnum: -1010,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 12,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Crowverload\",\r\n\t\tpp: 10,\r\n\t\tpriority: -4,\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Glare', target);\r\n\t\t\tthis.add('-anim', source, 'X-Scissor', target);\r\n\t\t},\r\n\t\tonTryHit(source, target, move) {\r\n\t\t\tif (source.volatiles['substitute']) {\r\n\t\t\t\tthis.add('-fail', source, 'move: Crowverload');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t\tif (source.hp <= source.maxhp / 4) {\r\n\t\t\t\tthis.add('-fail', source, 'move: Substitute', '[weak]');\r\n\t\t\t\treturn this.NOT_FAIL;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tthis.actions.useMove('substitute', source, { });\r\n\t\t\t// source.addVolatile['substitute'];\r\n\t\t\t// this.damage(Math.ceil(source.maxhp / 4));\r\n\t\t},\r\n\t\tflags: { protect: 1, mirror: 1, metronome: 1 },\r\n\t\tmultihit: [10, 10],\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Dark\",\r\n\t\tzMove: { basePower: 140 },\r\n\t\tmaxMove: { basePower: 130 },\r\n\t\tcontestType: \"Tough\",\r\n\t\tshortDesc: \"Hits 10 times. User creates a Substitute.\",\r\n\t\tdesc: \"Hits 10 times. User creates a Substitute.\",\r\n\t},\r\n\tnaturesfury: {\r\n\t\tnum: -1011,\r\n\t\taccuracy: true,\r\n\t\tbasePower: 0,\r\n\t\tcategory: \"Status\",\r\n\t\tname: \"Nature's Fury\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { failencore: 1, nosleeptalk: 1, noassist: 1, failcopycat: 1, failmimic: 1, failinstruct: 1 },\r\n\t\tonModifyPriority(priority, source, target, move) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t} else if (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\treturn priority;\r\n\t\t\t} else {\r\n\t\t\t\treturn priority + 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonTryHit(target, pokemon) {\r\n\t\t\tlet move = 'extremespeed';\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\tmove = 'lightningleap';\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tmove = 'grassyglide';\r\n\t\t\t} else if (this.field.isTerrain('mistyterrain')) {\r\n\t\t\t\tmove = 'mistymarch';\r\n\t\t\t} else if (this.field.isTerrain('psychicterrain')) {\r\n\t\t\t\tmove = 'wackywhack';\r\n\t\t\t}\r\n\t\t\tthis.actions.useMove(move, pokemon, { target });\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcallsMove: true,\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Normal\",\r\n\t\tcontestType: \"Beautiful\",\r\n\t\tshortDesc: \"Move used depends on Terrain.\",\r\n\t\tdesc: \"Move used depends on Terrain.\",\r\n\t},\r\n\tmistymarch: {\r\n\t\tnum: -1012,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 55,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Misty March\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Play Rough', target);\r\n\t\t},\r\n\t\tonModifyPriority(priority, source, target, move) {\r\n\t\t\tif (this.field.isTerrain('mistyterrain') && source.isGrounded()) {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Fairy\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"User on Misty Terrain: +1 priority.\",\r\n\t\tdesc: \"User on Misty Terrain: +1 priority.\",\r\n\t},\r\n\tlightningleap: {\r\n\t\tnum: -1013,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 55,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Lightning Leap\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Volt Tackle', target);\r\n\t\t},\r\n\t\tonModifyPriority(priority, source, target, move) {\r\n\t\t\tif (this.field.isTerrain('electricterrain') && source.isGrounded()) {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Electric\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"User on Electric Terrain: +1 priority.\",\r\n\t\tdesc: \"User on Electric Terrain: +1 priority.\",\r\n\t},\r\n\twackywhack: {\r\n\t\tnum: -1014,\r\n\t\taccuracy: 100,\r\n\t\tbasePower: 80,\r\n\t\tcategory: \"Physical\",\r\n\t\tname: \"Wacky Whack\",\r\n\t\tpp: 20,\r\n\t\tpriority: 0,\r\n\t\tflags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },\r\n\t\tonTryMove() {\r\n\t\t\tthis.attrLastMove('[still]');\r\n\t\t},\r\n\t\tonPrepareHit(target, source) {\r\n\t\t\tthis.add('-anim', source, 'Zed Headbutt', target);\r\n\t\t\tthis.add('-anim', source, 'Thief', target);\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (this.field.isTerrain('psychicterrain') && source.isGrounded()) {\r\n\t\t\t\tthis.boost({ spe: 1 }, source, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsecondary: null,\r\n\t\ttarget: \"normal\",\r\n\t\ttype: \"Psychic\",\r\n\t\tcontestType: \"Cool\",\r\n\t\tshortDesc: \"User in Psychic Terrain: +1 Speed.\",\r\n\t\tdesc: \"User in Psychic Terrain: +1 Speed.\",\r\n\t},\r\n\tbonemerang: {\r\n\t\tinherit: true,\r\n\t\tonAfterMove(source) {\r\n\t\t\tconst item = source.lastItem || 'thickclub';\r\n\t\t\tsource.lastItem = '';\r\n\t\t\tsource.setItem(item);\r\n\t\t\tthis.add('-item', source, this.dex.items.get(item), '[from] move: Bonemerang');\r\n\t\t},\r\n\t\tshortDesc: \"Returns last used item. Default Thick Club.\",\r\n\t\tdesc: \"Returns last used item. Defaults to Thick Club if none.\",\r\n\t},\r\n\telectricterrain: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\teffectType: 'Terrain',\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('terrainextender')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\t\tif (status.id === 'slp' && target.isGrounded() && !target.isSemiInvulnerable()) {\r\n\t\t\t\t\tif (effect.id === 'yawn' || (effect.effectType === 'Move' && !effect.secondaries)) {\r\n\t\t\t\t\t\tthis.add('-activate', target, 'move: Electric Terrain');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonTryAddVolatile(status, target) {\r\n\t\t\t\tif (!target.isGrounded() || target.isSemiInvulnerable()) return;\r\n\t\t\t\tif (status.id === 'yawn') {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Electric Terrain');\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Electric' && attacker.isGrounded() && !attacker.isSemiInvulnerable()) {\r\n\t\t\t\t\tthis.debug('electric terrain boost');\r\n\t\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Electric Terrain', '[from] ability: ' + effect.name, `[of] ${source}`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Electric Terrain');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\r\n\t\t\t\t\tif (this.dex.moves.get(moveSlot.id).flags['heal']) {\r\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeMovePriority: 6,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif (move.flags['heal'] && !move.isZ && !move.isMax) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Electric Terrain', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\t\tif (move.flags['heal'] && !move.isZ && !move.isMax) {\r\n\t\t\t\t\tthis.add('cant', pokemon, 'move: Electric Terrain', move);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonTryHeal(damage, target, source, effect) {\r\n\t\t\t\tif (effect && (effect.id === 'zpower' || (effect as Move).isZ)) return damage;\r\n\t\t\t\tif (source && target !== source && target.hp !== target.maxhp && effect.name === \"Pollen Puff\") {\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\t// FIXME: Wrong error message, correct one not supported yet\r\n\t\t\t\t\tthis.add('cant', source, 'move: Electric Terrain', effect);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'move: Electric Terrain');\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"5 turns. Grounded: +Electric power, can't sleep, can't heal.\",\r\n\t\tdesc: \"5 turns. Grounded: +Electric power, can't sleep, can't use healing moves.\",\r\n\t},\r\n\tmistyterrain: {\r\n\t\tinherit: true,\r\n\t\tcondition: {\r\n\t\t\teffectType: 'Terrain',\r\n\t\t\tduration: 5,\r\n\t\t\tdurationCallback(source, effect) {\r\n\t\t\t\tif (source?.hasItem('terrainextender')) {\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\t}\r\n\t\t\t\treturn 5;\r\n\t\t\t},\r\n\t\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\t\tif (!target.isGrounded() || target.isSemiInvulnerable()) return;\r\n\t\t\t\tif (effect && ((effect as Move).status || effect.id === 'yawn')) {\r\n\t\t\t\t\tthis.add('-activate', target, 'move: Misty Terrain');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tonTryAddVolatile(status, target, source, effect) {\r\n\t\t\t\tif (!target.isGrounded() || target.isSemiInvulnerable()) return;\r\n\t\t\t\tif (status.id === 'confusion') {\r\n\t\t\t\t\tif (effect.effectType === 'Move' && !effect.secondaries) this.add('-activate', target, 'move: Misty Terrain');\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\tif (move.type === 'Dragon' && defender.isGrounded() && !defender.isSemiInvulnerable()) {\r\n\t\t\t\t\tthis.debug('misty terrain weaken');\r\n\t\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t\t}\r\n\t\t\t\tif (move.type === 'Fairy' && attacker.isGrounded() && !attacker.isSemiInvulnerable()) {\r\n\t\t\t\t\tthis.debug('misty terrain boost');\r\n\t\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldStart(field, source, effect) {\r\n\t\t\t\tif (effect?.effectType === 'Ability') {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Misty Terrain', '[from] ability: ' + effect.name, `[of] ${source}`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-fieldstart', 'move: Misty Terrain');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'Misty Terrain');\r\n\t\t\t},\r\n\t\t},\r\n\t\tshortDesc: \"5 turns. Can't status,-Dragon power vs grounded, +Fairy power.\",\r\n\t\tdesc: \"5 turns. Can't status,-Dragon power vs grounded, +Fairy power.\",\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["move"]
}
