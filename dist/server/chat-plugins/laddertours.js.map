{
  "version": 3,
  "sources": ["../../../server/chat-plugins/laddertours.ts"],
  "sourcesContent": ["/**\r\n * Many parts borrowed from POSHO-9000.\r\n * Refactored at length by @author mia-pi-git\r\n */\r\nimport { FS, Utils, Net } from '../../lib';\r\nimport { prefixManager } from './username-prefixes';\r\n\r\nconst MINUTE = 60000;\r\nconst INTERVAL = MINUTE;\r\nconst FACTOR = 1.5;\r\n\r\ninterface TrackerConfig {\r\n\tformat: string;\r\n\tprefix: string;\r\n\trating: number;\r\n\tdeadline?: string;\r\n\tcutoff?: number;\r\n\tusers?: ID[];\r\n\tshowdiffs?: boolean;\r\n}\r\n\r\ninterface Leaderboard {\r\n\tcurrent?: LeaderboardEntry[];\r\n\tlast?: LeaderboardEntry[];\r\n\tlookup: Map<string, LeaderboardEntry>;\r\n}\r\n\r\ninterface LeaderboardEntry {\r\n\tname: string;\r\n\trank?: number;\r\n\telo: number;\r\n\tgxe: number;\r\n\tglicko: number;\r\n\tglickodev: number;\r\n}\r\n\r\nexport class LadderTracker {\r\n\treadonly config: TrackerConfig;\r\n\r\n\tformat: ID;\r\n\tprefix: ID;\r\n\tprivate deadline?: Date;\r\n\trating: number;\r\n\tusers: Set<ID>;\r\n\r\n\tprivate lastid?: string;\r\n\tshowdiffs?: boolean;\r\n\tprivate started?: NodeJS.Timeout;\r\n\tprivate final?: NodeJS.Timeout;\r\n\r\n\tleaderboard: Leaderboard;\r\n\r\n\tcooldown?: Date;\r\n\tprivate changed?: boolean;\r\n\tlines: { them: number, total: number };\r\n\troom: Room;\r\n\r\n\tconstructor(room: Room, config: TrackerConfig) {\r\n\t\tthis.config = config;\r\n\t\tthis.room = room;\r\n\r\n\t\tthis.format = toID(config.format);\r\n\t\tthis.prefix = toID(config.prefix);\r\n\t\tthis.rating = config.rating || 0;\r\n\t\tif (config.deadline) this.setDeadline(config.deadline, false);\r\n\r\n\t\tthis.users = new Set(config.users);\r\n\t\tthis.leaderboard = { lookup: new Map() };\r\n\t\tthis.showdiffs = config.showdiffs || false;\r\n\r\n\t\tthis.lines = { them: 0, total: 0 };\r\n\t}\r\n\r\n\tstatic get(room: Room | string) {\r\n\t\troom = toID(room);\r\n\t\treturn trackers[room];\r\n\t}\r\n\r\n\taddHTML(msg: string, box = false) {\r\n\t\tif (box) msg = `<div class=\"infobox\">${msg}</div>`;\r\n\t\tthis.room.add(`|html|${msg}`).update();\r\n\t}\r\n\r\n\tsetDeadline(argument: string, save = true) {\r\n\t\tconst date = new Date(argument);\r\n\t\tif (!+date) throw new Chat.ErrorMessage(`Invalid date: ${argument}`);\r\n\r\n\t\tthis.deadline = date;\r\n\t\tif (this.final) clearTimeout(this.final);\r\n\t\t// We set the timer to fire slightly before the deadline and then\r\n\t\t// repeatedly do process.nextTick checks for accuracy\r\n\t\tthis.final = setTimeout(() => {\r\n\t\t\tthis.stop();\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n\t\t\tthis.captureFinalLeaderboard();\r\n\t\t}, (+this.deadline - Date.now()) - 500);\r\n\r\n\t\tif (save) LadderTracker.save();\r\n\t}\r\n\r\n\tasync captureFinalLeaderboard() {\r\n\t\tconst now = new Date();\r\n\t\tif (now < this.deadline!) {\r\n\t\t\tprocess.nextTick(this.captureFinalLeaderboard.bind(this));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst leaderboard = await this.getLeaderboard();\r\n\t\tthis.addHTML(this.styleLeaderboard(leaderboard, +now), true);\r\n\t\tthis.deadline = undefined;\r\n\t}\r\n\r\n\thandleBattleEnd(battle: Rooms.RoomBattle) {\r\n\t\tconst skipid = this.lastid;\r\n\t\tconst roomid = battle.roomid;\r\n\r\n\t\tconst [rating, rmsg] = this.getRating(battle);\r\n\t\tif (!this.tracking(battle, rating) || (skipid && skipid >= roomid)) return;\r\n\r\n\t\tconst style = (p: string) => this.stylePlayer(p);\r\n\t\tconst msg = `Battle started between ${style(battle.p1.name)} and ${style(battle.p2.name)}`;\r\n\t\tthis.addHTML(`<a href=\"/${roomid}\" class=\"ilink\">${msg}. ${rmsg}</a></div>`, true);\r\n\t\tif (!this.lastid || this.lastid < roomid) this.lastid = roomid;\r\n\t}\r\n\tformatTimeRemaining(ms: number, round?: boolean): string {\r\n\t\tlet s = ms / 1000;\r\n\t\tlet h = Math.floor(s / 3600);\r\n\t\tlet m = Math.floor((s - h * 3600) / 60);\r\n\t\ts = s - h * 3600 - m * 60;\r\n\r\n\t\tif (round) {\r\n\t\t\ts = Math.round(s);\r\n\t\t\tif (s === 60) {\r\n\t\t\t\ts = 0;\r\n\t\t\t\tm++;\r\n\t\t\t}\r\n\t\t\tif (m === 60) {\r\n\t\t\t\tm = 0;\r\n\t\t\t\th++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst time = [];\r\n\t\tif (h > 0) time.push(`${h} hour${h === 1 ? '' : 's'}`);\r\n\t\tif (m > 0) time.push(`${m} minute${m === 1 ? '' : 's'}`);\r\n\t\tif (s > 0) time.push(`${s} second${s === 1 ? '' : 's'}`);\r\n\t\treturn time.join(' ');\r\n\t}\r\n\r\n\tgetRating(battle: Rooms.RoomBattle): [number, string] {\r\n\t\tconst p1 = this.leaderboard.lookup.get(toID(battle.p1.name));\r\n\t\tconst p2 = this.leaderboard.lookup.get(toID(battle.p2.name));\r\n\t\tif (p1 && p2) return this.averageRating(p1.elo, p2.elo);\r\n\t\tconst minElo = Math.floor(battle.rated);\r\n\t\tif (p1 && p1.elo > minElo) return this.averageRating(p1.elo, minElo);\r\n\t\tif (p2 && p2.elo > minElo) return this.averageRating(p2.elo, minElo);\r\n\t\treturn [minElo, `(min rating: ${minElo})`];\r\n\t}\r\n\r\n\taverageRating(a: number, b: number): [number, string] {\r\n\t\tconst rating = Math.round((a + b) / 2);\r\n\t\treturn [rating, `(avg rating: ${rating})`];\r\n\t}\r\n\r\n\tstylePlayer(player: string) {\r\n\t\treturn `<username>${player}</username>`;\r\n\t}\r\n\r\n\ttracking(battle: Rooms.RoomBattle, rating: number) {\r\n\t\tconst minElo = Math.floor(Number(battle.rated) || 0);\r\n\t\tif (battle.format !== this.config.format) return false;\r\n\t\tif (!minElo || minElo < 1000) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst p1 = toID(battle.p1.name);\r\n\t\tconst p2 = toID(battle.p2.name);\r\n\r\n\t\t// If we are tracking users and a player in the game is one of them, report the battle\r\n\t\tif (this.users.size && (this.users.has(p1) || this.users.has(p2))) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If a player has an our prefix, report if the battle is above the required rating\r\n\t\tif (p1.startsWith(this.prefix) || p2.startsWith(this.prefix)) {\r\n\t\t\treturn rating >= this.rating;\r\n\t\t}\r\n\r\n\t\t// Report if a cutoff has been set and both prefixed players are within a factor of the cutoff\r\n\t\tif (this.config.cutoff && p1.startsWith(this.prefix) && p2.startsWith(this.prefix)) {\r\n\t\t\tconst a = this.leaderboard.lookup.get(p1);\r\n\t\t\tconst b = this.leaderboard.lookup.get(p2);\r\n\t\t\tconst rank = this.config.cutoff * FACTOR;\r\n\t\t\treturn a?.rank && a.rank <= rank && b?.rank && b.rank <= rank;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tleaderboardCooldown(now: Date) {\r\n\t\tif (!this.cooldown) return true;\r\n\t\tconst wait = Math.floor((+now - +this.cooldown) / MINUTE);\r\n\t\tconst lines = this.changed ? this.lines.them : this.lines.total;\r\n\t\tif (lines < 5 && wait < 3) return false;\r\n\t\tconst factor = this.changed ? 6 : 1;\r\n\t\treturn factor * (wait + lines) >= 60;\r\n\t}\r\n\r\n\tgetDeadline(now: Date) {\r\n\t\tif (!this.deadline) {\r\n\t\t\treturn ('No deadline has been set.');\r\n\t\t} else {\r\n\t\t\treturn (`**Time Remaining:** ${this.formatTimeRemaining(+this.deadline - +now, true)}`);\r\n\t\t}\r\n\t}\r\n\r\n\ttracked() {\r\n\t\tif (!this.users.size) {\r\n\t\t\treturn ('Not currently tracking any users.');\r\n\t\t} else {\r\n\t\t\tconst users = Array.from(this.users.values()).join(', ');\r\n\t\t\tconst plural = this.users.size === 1 ? 'user' : 'users';\r\n\t\t\treturn (`Currently tracking <b>${this.users.size}</b> ${plural}: ${users}`);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getLeaderboard(display?: boolean) {\r\n\t\tconst url = `https://pokemonshowdown.com/ladder/${this.format}.json?prefix=${this.prefix}`;\r\n\t\tconst leaderboard: LeaderboardEntry[] = [];\r\n\t\tlet response;\r\n\t\ttry {\r\n\t\t\tresponse = await Net(url).get().then(JSON.parse);\r\n\t\t} catch (e: any) {\r\n\t\t\tif (e.name === 'SyntaxError') { // sometimes the page 404s, meaning invalid json. skip!\r\n\t\t\t\tresponse = { toplist: [] };\r\n\t\t\t} else {\r\n\t\t\t\tif (display) throw new Chat.ErrorMessage('Failed to fetch leaderboard. Try again later.');\r\n\t\t\t\treturn leaderboard;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.leaderboard.lookup = new Map();\r\n\t\tfor (const data of response.toplist) {\r\n\t\t\t// TODO: move the rounding until later\r\n\t\t\tconst entry: LeaderboardEntry = {\r\n\t\t\t\tname: data.username,\r\n\t\t\t\telo: Math.round(data.elo),\r\n\t\t\t\tgxe: data.gxe,\r\n\t\t\t\tglicko: Math.round(data.rpr),\r\n\t\t\t\tglickodev: Math.round(data.rprd),\r\n\t\t\t};\r\n\t\t\tthis.leaderboard.lookup.set(data.userid, entry);\r\n\t\t\tif (!data.userid.startsWith(this.prefix)) continue;\r\n\t\t\tentry.rank = leaderboard.length + 1;\r\n\t\t\tleaderboard.push(entry);\r\n\t\t}\r\n\t\tif (display) {\r\n\t\t\tthis.leaderboard.last = leaderboard;\r\n\t\t\tthis.changed = false;\r\n\t\t\tthis.lines = { them: 0, total: 0 };\r\n\t\t}\r\n\t\treturn leaderboard;\r\n\t}\r\n\r\n\tstatic getTracker(context: Chat.CommandContext) {\r\n\t\tconst room = context.requireRoom();\r\n\t\tconst t = this.get(room);\r\n\t\tif (!t) throw new Chat.ErrorMessage(`There is no active ladder tracker in this room.`);\r\n\t\treturn t;\r\n\t}\r\n\r\n\tstatic save() {\r\n\t\tFS('config/chat-plugins/laddertrackers.json').writeUpdate(() => {\r\n\t\t\tconst out: Record<string, TrackerConfig> = {};\r\n\t\t\tfor (const roomid in trackers) {\r\n\t\t\t\ttrackers[roomid].restoreConfig();\r\n\t\t\t\tout[roomid] = trackers[roomid].config;\r\n\t\t\t}\r\n\t\t\treturn JSON.stringify(out);\r\n\t\t});\r\n\t}\r\n\r\n\trestoreConfig() {\r\n\t\tthis.config.users = [...this.users];\r\n\t\tthis.config.showdiffs = this.showdiffs;\r\n\t\tthis.config.rating = this.rating;\r\n\t\tthis.config.prefix = this.prefix;\r\n\t\tthis.config.deadline = this.deadline?.toString();\r\n\t}\r\n\r\n\tstyleLeaderboard(leaderboard: LeaderboardEntry[], final?: number) {\r\n\t\tconst diffs = this.leaderboard.last && !final ?\r\n\t\t\tthis.getDiffs(this.leaderboard.last, leaderboard) :\r\n\t\t\tnew Map();\r\n\t\tlet buf = '<center>';\r\n\t\tif (final) {\r\n\t\t\tbuf +=\r\n            `<h1 style=\"margin-bottom: 0.2em\">Final Leaderboard - ${this.prefix}</h1>` +\r\n            `<div style=\"margin-bottom: 1em\"><small><em>${final}</em></small></div>`;\r\n\t\t}\r\n\t\tbuf +=\r\n            '<div class=\"ladder\" style=\"max-height: 250px; overflow-y: auto\"><table>' +\r\n            '<tr><th></th><th>Name</th><th><abbr title=\"Elo rating\">Elo</abbr></th>' +\r\n            '<th><abbr title=\"user\\'s percentage chance of winning a random battle (aka GLIXARE)\">GXE</abbr></th>' +\r\n            '<th><abbr title=\"Glicko-1 rating system: rating\u00B1deviation (provisional if deviation>100)\">Glicko-1</abbr></th></tr>';\r\n\t\tfor (const [i, p] of leaderboard.entries()) {\r\n\t\t\tconst id = toID(p.name);\r\n\t\t\tconst link = `https://www.smogon.com/forums/search/1/?q=\"${encodeURIComponent(p.name)}\"`;\r\n\t\t\tconst diff = diffs.get(id);\r\n\t\t\tlet rank = `${i + 1}`;\r\n\t\t\tif (diff) {\r\n\t\t\t\tconst symbol = diff[2] < diff[3] ?\r\n\t\t\t\t\t'<span style=\"color: #F00\">\u25BC</span>' :\r\n\t\t\t\t\t'<span style=\"color: #008000\">\u25B2</span>';\r\n\t\t\t\trank = `${symbol}${rank}`;\r\n\t\t\t}\r\n\t\t\tbuf +=\r\n                `<tr><td style=\"text-align: right\"><a href='${link}' class=\"subtle\">${rank}</a></td>` +\r\n                Utils.html`<td><username class=\"username\">${p.name}</username></td>` +\r\n                `<td><strong>${p.elo}</strong></td><td>${p.gxe.toFixed(1)}%</td>` +\r\n                `<td>${p.glicko} \u00B1 ${p.glickodev}</td></tr>`;\r\n\t\t}\r\n\t\tbuf += '</table></div></center>';\r\n\t\treturn buf;\r\n\t}\r\n\r\n\tgetDiffs(last: LeaderboardEntry[], current: LeaderboardEntry[], num?: number) {\r\n\t\tconst diffs = new Map<string, [string, number, number, number]>();\r\n\r\n\t\tconst lastN = num ? last.slice(0, num) : last;\r\n\t\tfor (const [i, player] of lastN.entries()) {\r\n\t\t\tconst id = toID(player.name);\r\n\t\t\tconst oldrank = i + 1;\r\n\t\t\tlet newrank = current.findIndex(e => toID(e.name) === id) + 1;\r\n\t\t\tlet elo: number;\r\n\t\t\tif (!newrank) {\r\n\t\t\t\tnewrank = Infinity;\r\n\t\t\t\telo = 0;\r\n\t\t\t} else {\r\n\t\t\t\telo = current[newrank - 1].elo;\r\n\t\t\t}\r\n\t\t\tif (oldrank !== newrank) diffs.set(id, [player.name, elo, oldrank, newrank]);\r\n\t\t}\r\n\r\n\t\tconst currentN = num ? current.slice(0, num) : current;\r\n\t\tfor (const [i, player] of currentN.entries()) {\r\n\t\t\tconst id = toID(player.name);\r\n\t\t\tconst newrank = i + 1;\r\n\t\t\tlet oldrank = last.findIndex(e => toID(e.name) === id) + 1;\r\n\t\t\tif (!oldrank) oldrank = Infinity;\r\n\t\t\tif (oldrank !== newrank) diffs.set(id, [player.name, player.elo, oldrank, newrank]);\r\n\t\t}\r\n\r\n\t\treturn diffs;\r\n\t}\r\n\r\n\ttrackChanges(leaderboard: LeaderboardEntry[], display?: boolean) {\r\n\t\tif (!this.leaderboard.current || !this.config.cutoff) return;\r\n\t\tconst n = this.config.cutoff;\r\n\t\tconst diffs = this.getDiffs(this.leaderboard.current, leaderboard, n * FACTOR);\r\n\t\tif (!diffs.size) return;\r\n\r\n\t\tconst sorted = Array.from(diffs.values()).sort((a, b) => a[3] - b[3]);\r\n\t\tconst messages = [];\r\n\t\tfor (const [name, elo, oldrank, newrank] of sorted) {\r\n\t\t\tif (!((oldrank > n && newrank <= n) || (oldrank <= n && newrank > n))) {\r\n\t\t\t\tthis.changed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (display) {\r\n\t\t\t\tconst symbol = oldrank < newrank ? '\u25BC' : '\u25B2';\r\n\t\t\t\tconst rank = newrank === Infinity ? '?' : newrank;\r\n\t\t\t\tconst rating = elo || '?';\r\n\t\t\t\tconst message = newrank > n ? `<i>${name} (${rating})</i>` : `${name} (${rating})`;\r\n\t\t\t\tmessages.push(`${symbol}<b>${rank}.</b> ${message}`);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (display) this.addHTML(messages.join(' '));\r\n\t}\r\n\r\n\tsetPrefix(prefix: string, save = true) {\r\n\t\tconst oldPrefix = this.prefix;\r\n\t\tthis.prefix = toID(prefix);\r\n\t\tif (oldPrefix !== prefix) {\r\n\t\t\tif (save) LadderTracker.save();\r\n\t\t\tthis.togglePrefix(oldPrefix);\r\n\t\t}\r\n\t}\r\n\r\n\ttogglePrefix(oldPrefix?: ID) {\r\n\t\tif (!this.room.settings.isPrivate) {\r\n\t\t\ttry {\r\n\t\t\t\tif (oldPrefix) prefixManager.removePrefix(oldPrefix, 'privacy');\r\n\t\t\t} catch {} // suppress errorMessages in case it's the first start and it hasn't been made priv yet\r\n\t\t\ttry {\r\n\t\t\t\tprefixManager.addPrefix(this.prefix, 'privacy');\r\n\t\t\t} catch {} // same as above\r\n\t\t}\r\n\t}\r\n\r\n\tstart() {\r\n\t\tif (this.started) return;\r\n\r\n\t\tthis.togglePrefix();\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n\t\tthis.started = setInterval(async () => {\r\n\t\t\t// Leaderboard\r\n\t\t\tconst leaderboard = await this.getLeaderboard();\r\n\t\t\tif (!leaderboard.length) return;\r\n\t\t\tif (this.leaderboard) this.trackChanges(leaderboard, this.showdiffs);\r\n\t\t\tthis.leaderboard.current = leaderboard;\r\n\t\t}, INTERVAL);\r\n\t}\r\n\r\n\tstop() {\r\n\t\tif (this.started) {\r\n\t\t\tclearInterval(this.started);\r\n\t\t\tthis.started = undefined;\r\n\t\t\tthis.leaderboard.current = undefined;\r\n\t\t\tthis.leaderboard.last = undefined;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const trackers: Record<string, LadderTracker> = {};\r\ntry {\r\n\tconst data = JSON.parse(FS(\"config/chat-plugins/laddertrackers.json\").readIfExistsSync() || \"{}\");\r\n\tfor (const roomid in data) {\r\n\t\tconst room = Rooms.search(roomid);\r\n\t\tif (!room) {\r\n\t\t\tMonitor.adminlog(`Missing room ${roomid} for ladder tracker.`);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ttrackers[roomid] = new LadderTracker(room, data[roomid]);\r\n\t\ttrackers[roomid].start();\r\n\t}\r\n} catch {}\r\n\r\nexport const commands: Chat.ChatCommands = {\r\n\tld: 'laddertrack',\r\n\tladdertrack: {\r\n\t\toverride: '',\r\n\t\t''(target, room, user, connection, cmd) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tthis.checkCan('declare', null, room);\r\n\t\t\tif (!toID(target)) {\r\n\t\t\t\treturn this.parse(`/j view-laddertrack-${room.roomid}`);\r\n\t\t\t}\r\n\t\t\tif (trackers[room.roomid] && !cmd.includes('override')) {\r\n\t\t\t\treturn this.errorReply(\r\n\t\t\t\t\t`There is already a tracker for this room. Use /laddertrack override if you want to set a new one.`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst config: Partial<TrackerConfig> = {};\r\n\t\t\t/* cutoff?: number; */\r\n\t\t\tconst rating = Number(/rating=([0-9]+)/.exec(target)?.[1]);\r\n\t\t\tif (!rating || rating < 1000) {\r\n\t\t\t\treturn this.errorReply(\"Invalid rating. Must be a number above 1000.\");\r\n\t\t\t}\r\n\t\t\tconfig.rating = rating;\r\n\t\t\tconst rawCutoff = /cutoff=([0-9]+)/.exec(target)?.[1];\r\n\t\t\tconst cutoff = Number(rawCutoff);\r\n\t\t\tif (rawCutoff && (!cutoff || cutoff < 1000)) {\r\n\t\t\t\treturn this.errorReply(\"Invalid cutoff. Must be a number above 1000.\");\r\n\t\t\t}\r\n\t\t\tif (cutoff) {\r\n\t\t\t\tconfig.cutoff = cutoff;\r\n\t\t\t}\r\n\t\t\tconst deadline = /deadline=([^,]+)/i.exec(target)?.[1];\r\n\t\t\tif (deadline) {\r\n\t\t\t\tconst date = new Date(deadline);\r\n\t\t\t\tif (!+date) {\r\n\t\t\t\t\treturn this.errorReply(\"Invalid date.\");\r\n\t\t\t\t}\r\n\t\t\t\tconfig.deadline = date.toString();\r\n\t\t\t}\r\n\t\t\tconst format = toID(/format=([a-zA-Z0-9]+)/i.exec(target)?.[1]);\r\n\t\t\tif (!format) {\r\n\t\t\t\treturn this.errorReply(\"You must specify a format.\");\r\n\t\t\t}\r\n\t\t\tconfig.format = format;\r\n\t\t\tconst prefix = toID(/prefix=([a-zA-Z0-9]+)/i.exec(target)?.[1]);\r\n\t\t\tif (!prefix) {\r\n\t\t\t\treturn this.errorReply(\"You must specify a prefix.\");\r\n\t\t\t}\r\n\t\t\tconfig.prefix = prefix;\r\n\r\n\t\t\ttrackers[room.roomid] = new LadderTracker(room, config as TrackerConfig);\r\n\t\t\ttrackers[room.roomid].start();\r\n\t\t\tLadderTracker.save();\r\n\r\n\t\t\tthis.sendReply(\"Ladder tracking started.\");\r\n\t\t\tthis.modlog('LADDERTRACK', null, Object.entries(config).map(([k, v]) => `${k}=${v}`).join(', '));\r\n\t\t},\r\n\t\ttop: 'leaderboard',\r\n\t\tasync leaderboard(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tthis.runBroadcast();\r\n\t\t\tconst leaderboard = await tracker.getLeaderboard(this.broadcasting);\r\n\t\t\tthis.sendReplyBox(tracker.styleLeaderboard(leaderboard));\r\n\t\t},\r\n\t\tprefix(target, room, user, sf) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\ttarget = toID(target);\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\t\ttracker.setPrefix(target);\r\n\t\t\t\tLadderTracker.save();\r\n\t\t\t\tthis.modlog(`TRACKER PREFIX`, null, target);\r\n\t\t\t\tthis.addModAction(`${user.name} updated the ladder tracker prefix to ${target}`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.runBroadcast();\r\n\t\t\t}\r\n\t\t\tthis.sendReply(`Current prefix: ${tracker.prefix}`);\r\n\t\t},\r\n\t\tremaining: 'deadline',\r\n\t\tdeadline(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tif (!tracker) return;\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\t\tconst date = new Date(target);\r\n\t\t\t\tif (!+date) {\r\n\t\t\t\t\treturn this.errorReply(\"Invalid date.\");\r\n\t\t\t\t}\r\n\t\t\t\ttracker.setDeadline(target);\r\n\t\t\t\tLadderTracker.save();\r\n\t\t\t} else {\r\n\t\t\t\tthis.runBroadcast();\r\n\t\t\t}\r\n\t\t\tthis.sendReplyBox(tracker.getDeadline(new Date()));\r\n\t\t},\r\n\t\telo: 'rating',\r\n\t\trating(target, room, user, sf, cmd) {\r\n\t\t\troom = this.requireRoom();\r\n\t\t\tconst tracker = LadderTracker.get(room);\r\n\t\t\tthis.runBroadcast();\r\n\t\t\tif (!tracker) return this.errorReply(`There is no active ladder tracker for this room.`);\r\n\t\t\tconst rating = Number(target);\r\n\t\t\tif (target) {\r\n\t\t\t\tif (!rating) return this.errorReply(\"Invalid rating.\");\r\n\t\t\t\tthis.checkCan('mute', null, room);\r\n\t\t\t\tif (rating < 1000) return this.errorReply(\"Invalid rating. Must be a number above 1000.\");\r\n\t\t\t\ttracker.rating = rating;\r\n\t\t\t\ttracker.config.rating = rating;\r\n\t\t\t\tLadderTracker.save();\r\n\t\t\t\tthis.addModAction(`${user.name} updated the ladder tracker rating to ${rating}.`);\r\n\t\t\t\tthis.modlog(`LADDERTRACK RATING`, null, target);\r\n\t\t\t} else {\r\n\t\t\t\tthis.runBroadcast();\r\n\t\t\t}\r\n\t\t\tthis.sendReplyBox(`<b>Rating:</b> ${tracker.rating}`);\r\n\t\t},\r\n\t\tcutoff(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tif (!tracker) return;\r\n\t\t\tconst rating = Number(target);\r\n\t\t\tif (target) {\r\n\t\t\t\tif (!rating) return this.errorReply(\"Invalid cutoff.\");\r\n\t\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\t\ttracker.config.cutoff = rating;\r\n\t\t\t\tLadderTracker.save();\r\n\t\t\t\tthis.modlog(`TRACKER CUTOFF`, null, `${rating}`);\r\n\t\t\t}\r\n\t\t\tthis.sendReplyBox(`<b>Cutoff:</b> ${tracker.config.cutoff || 0}`);\r\n\t\t},\r\n\t\tadd: 'watch',\r\n\t\ttrack: 'watch',\r\n\t\tfollow: 'watch',\r\n\t\twatch(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\tfor (const userid of target.split(',').map(toID)) {\r\n\t\t\t\tif (userid) {\r\n\t\t\t\t\ttracker.users.add(userid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.modlog(`LADDER ADDTRACKUSER`, null, target);\r\n\t\t\tthis.sendReplyBox(tracker.tracked());\r\n\t\t\tLadderTracker.save();\r\n\t\t},\r\n\t\tuntrack: 'unwatch',\r\n\t\tunfollow: 'unwatch',\r\n\t\tremove: 'unwatch',\r\n\t\tunwatch(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\tfor (const userid of target.split(',').map(toID)) {\r\n\t\t\t\tif (userid) {\r\n\t\t\t\t\ttracker.users.delete(userid);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.modlog(`LADDER UNTRACKUSER`, null, target);\r\n\t\t\tthis.sendReplyBox(tracker.tracked());\r\n\t\t\tLadderTracker.save();\r\n\t\t},\r\n\t\ttracked: 'tracking',\r\n\t\twatched: 'tracking',\r\n\t\tfollowed: 'tracking',\r\n\t\twatching: 'tracking',\r\n\t\ttracking(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\tthis.runBroadcast();\r\n\t\t\tthis.sendReplyBox(tracker.tracked());\r\n\t\t},\r\n\t\tstart(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\ttracker.start();\r\n\t\t\tLadderTracker.save();\r\n\t\t},\r\n\t\tpause(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\ttracker.stop();\r\n\t\t\tLadderTracker.save();\r\n\t\t},\r\n\t\tend: 'endtrack',\r\n\t\tendtrack(target, room, user, nike, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\ttracker.stop();\r\n\t\t\tdelete trackers[tracker.room.roomid];\r\n\t\t\tLadderTracker.save();\r\n\t\t\tthis.modlog(`LADDER ENDTRACK`, null);\r\n\t\t\tthis.addModAction(`${user.name} ended the active ladder tracker.`);\r\n\t\t},\r\n\t\thidediffs: 'showdiffs',\r\n\t\tshowdiffs(target, room, user, sf, cmd) {\r\n\t\t\tconst tracker = LadderTracker.getTracker(this);\r\n\t\t\tthis.checkCan('mute', null, tracker.room);\r\n\t\t\tconst setting = !cmd.includes('hide');\r\n\t\t\tif (tracker.showdiffs === setting) {\r\n\t\t\t\treturn this.sendReply(`Differences are already ${setting ? 'shown' : 'hidden'}.`);\r\n\t\t\t}\r\n\t\t\ttracker.showdiffs = setting;\r\n\t\t\tthis.addModAction(`${user.name} set ladder tracker showdiffs ${setting ? 'on' : 'off'}.`);\r\n\t\t\tLadderTracker.save();\r\n\t\t},\r\n\t},\r\n\tladdertrackhelp() {\r\n\t\tthis.runBroadcast();\r\n\t\tthis.sendReplyBox([\r\n\t\t\t`- /laddertrack OR /ld displays a page to start a tracker (requires # in the room to do so).`,\r\n\t\t\t// ` (can also be used with key=value formatted args to start it directly - requires keys: rating, prefix, format, deadline, cutoff)`,\r\n\t\t\t` - /laddertrack [leaderboard/top] - updates and displays the current leaderboard`,\r\n\t\t\t` - /laddertrack deadline [optional date] - displays the current deadline, or sets the deadline to the given deadline if one is given (requires % to do so)`,\r\n\t\t\t` - /laddertrack rating [optional rating] - displays the current rating, or sets the rating to the given rating if one is given (requires % to do so)`,\r\n\t\t\t` - /laddertrack watch [optional list,of,users] - tracks the given user's battles (requires % to do so)`,\r\n\t\t\t` - /laddertrack unwatch [list,of,users] - stops tracking the given user's battles (requires % to do so)`,\r\n\t\t\t` - /laddertrack tracking - displays the current users being tracked`,\r\n\t\t\t` - /laddertrack start - starts the tracker`,\r\n\t\t\t` - /laddertrack pause - temporarily pauses the tracker`,\r\n\t\t\t` - /laddertrack endtrack - ends the tracker entirely`,\r\n\t\t\t` - /laddertrack showdiffs - shows or hides differences between the current leaderboard and the previous leaderboard`,\r\n\t\t\t`All commands require % to be used to edit settings, and can be used by anyone to view settings.`,\r\n\t\t].join('<br />'));\r\n\t},\r\n};\r\n\r\nexport const pages: Chat.PageTable = {\r\n\tladdertrack(query, user) {\r\n\t\tconst room = this.requireRoom();\r\n\t\tlet buf = ``;\r\n\t\tthis.title = '[Ladder Tracker] Setup';\r\n\t\tbuf += `<div class=\"pad\"><h2>Ladder tracker setup</h2><hr />`;\r\n\t\tbuf += `<div class=\"infobox\">`;\r\n\t\tlet cmd = `/msgroom ${room},/laddertrack `;\r\n\t\tconst keys = ['rating', 'prefix', 'format', 'deadline', 'cutoff'];\r\n\t\tconst required = ['rating', 'prefix', 'format'];\r\n\t\tcmd += keys.map(k => `${k}={${k}}`).join(', ');\r\n\t\tbuf += `<form data-submitsend=\"${cmd}\">`;\r\n\t\tfor (const key of keys) {\r\n\t\t\tbuf += `<label>${key.charAt(0).toUpperCase()}${key.slice(1)}`;\r\n\t\t\tif (required.includes(key)) {\r\n\t\t\t\tbuf += ` (required)`;\r\n\t\t\t}\r\n\t\t\tbuf += `:</label>`;\r\n\t\t\tbuf += ` <input name=\"${key}\" />`;\r\n\t\t\tbuf += `<br />`;\r\n\t\t}\r\n\t\tbuf += `<button class=\"button notifying\" type=\"submit\">Create</button>`;\r\n\t\tbuf += `</form></div></div>`;\r\n\t\treturn buf;\r\n\t},\r\n};\r\n\r\nexport const handlers: Chat.Handlers = {\r\n\tonBattleCreate(battle, players) {\r\n\t\tfor (const tracker of Object.values(trackers)) {\r\n\t\t\ttracker.handleBattleEnd(battle);\r\n\t\t}\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
